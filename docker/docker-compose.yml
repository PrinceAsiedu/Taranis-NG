version: "3.9"

services:
  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - "redis_conf:/usr/local/etc/redis"

  database:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_DB: "taranis-ng"
      POSTGRES_USER: "taranis-ng"
      POSTGRES_PASSWORD: "supersecret"
    volumes:
      - "database_data:/var/lib/postgresql/data"

  core:
    depends_on: 
      - "redis"
      - "database"
    restart: always
    # image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-core:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.core
    environment: 
      REDIS_URL: "redis://redis"
      DB_URL: "database"
      DB_DATABASE: "taranis-ng"
      DB_USER: "taranis-ng"
      DB_PASSWORD: "supersecret"
      JWT_SECRET_KEY: "supersecret"
      OPENID_LOGOUT_URL: ""
      WORKERS_PER_CORE: "1"
      TARANIS_NG_SAMPLE_DATA: "true"
    ports: 
      - "5000:80"
    volumes:
      - "core_data:/data"

  # bots:
  #   depends_on:
  #     - "core"
  #   image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-bots:latest
  #   build:
  #     context: ..
  #     dockerfile: ./docker/Dockerfile.bots
  #   environment:
  #     API_KEY: "supersecret"
  #     TARANIS_NG_CORE_URL: "http://core/api/v1"
  #     WORKERS_PER_CORE: "1"
    
  collectors:
    depends_on:
      - "core"
    restart: always
    # image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-collectors:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.collectors
    environment:
      TARANIS_NG_CORE_URL: "http://core"
      API_KEY: "supersecret"
      WORKERS_PER_CORE: "1"
    ports:
      - "5001:80"
    
  presenters:
    depends_on:
      - "core"
    restart: always
    # image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-presenters:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.presenters
    environment:
      TARANIS_NG_CORE_URL: "http://core"
      API_KEY: "supersecret"
      WORKERS_PER_CORE: "1"
    ports:
      - "5002:80"
    
  publishers:
    depends_on:
      - "core"
    restart: always
    # image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-publishers:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.publishers
    environment:
      TARANIS_NG_CORE_URL: "http://core"
      API_KEY: "supersecret"
      WORKERS_PER_CORE: "1"
    ports:
      - "5003:80"
    
  gui:
    depends_on:
      - "core"
    restart: always
    # image: registry.gitlab.com/sk-cert/taranis-ng/taranis-ng-gui:latest
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.gui
    ports: 
      - "8080:80"
    environment:
      NGINX_WORKERS: "4"
      NGINX_CONNECTIONS: "16"
      VUE_APP_TARANIS_NG_CORE_API: "http://localhost:5000/api/v1"
      VUE_APP_TARANIS_NG_CORE_SSE: "http://localhost:5000/sse"
      VUE_APP_TARANIS_NG_URL: http://localhost:8080
      VUE_APP_TARANIS_NG_LOCALE: en

volumes:
  redis_conf:
  database_data:
  core_data:
