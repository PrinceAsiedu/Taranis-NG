- name: install os dependencies for API
  package:
    name:
    - python3-pip
    - python3-sqlalchemy
    - python3-flask-sqlalchemy
    - python3-postgresql
    - python3-psycopg2
    - supervisor
    - npm
    - git
    - redis
    state: present

- name: install the web server and configure the site
  include_tasks: webserver.yml
  when: taranisng_install_webserver

- name: install the sql engine and create database
  include_tasks: database.yml
  when: taranisng_install_database | bool

- name: download and unpack gecko driver- FIXME architectures
  unarchive:
    src: "{{ gecko_url }}"
    remote_src: yes
    dest: /usr/local/bin/

- name: install chrome driver
  package:
    name:
    - chromium-chromedriver
    - wkhtmltopdf
    - python3-pdfkit
    state: present

- name: symlink chromedriver to /usr/local/bin ;)
  file:
    src: /usr/bin/chromedriver
    dest: /usr/local/bin/chromedriver
    owner: root
    group: root
    state: link

- name: clone all repositories
  git:
    accept_hostkey: "{{ taranisng_ssh_reckless | bool }}"
    repo: "{{ item.uri }}"
    dest: "{{ taranisng_root }}/{{ item.name }}"
  with_items: "{{ taranisng_backend_repos }}"

# backend

- name: install python dependencies (globally)
  pip:
    requirements: "{{ taranisng_root }}/{{ item }}/requirements.txt"
  with_items:
  - "taranis-ng-common"
  - "taranis-ng-core"
  - "taranis-ng-collectors"
  - "taranis-ng-presenters"
  - "taranis-ng-publishers"

- name: install other python dependencies (globally)
  pip:
    name:
    - flask-jwt-extended

- name: symlink common to other components
  file:
    src: "{{ taranisng_root }}/taranis-ng-common/taranisng"
    dest: "{{ taranisng_root }}/{{ item }}/taranisng"
    state: link
  with_items:
  - "taranis-ng-core"
  - "taranis-ng-collectors"
  - "taranis-ng-presenters"
  - "taranis-ng-publishers"

- name: deploy .env for database access
  template:
    src: env-api.j2
    dest: "{{ taranisng_root }}/taranis-ng-core/.env"

#- name: ... and run.sh
#  template:
#    src: run.sh.j2
#    dest: "{{ taranisng_root }}/taranis-ng-core/run.sh"
#    mode: a=rx,u+w

- name: create temporary launcher for collectors, presenters, publishers
  template:
    src: TEMPORARY-START-ALL.sh.j2
    dest: /opt/taranisng/TEMPORARY-START-ALL.sh
    mode: '0755'
    owner: root
    group: root

- name: dependencies for the temporary launcher
  package:
    name:
    - screen

- name: call launcher at reboot
  cron:
    name: taranis-temporary-start-all
    special_time: reboot
    job: /opt/taranisng/TEMPORARY-START-ALL.sh

# keycloak

- name: install keycloak
  include_tasks: keycloak.yml
  when: taranisng_install_keycloak | bool

